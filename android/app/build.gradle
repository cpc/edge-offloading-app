plugins {
    id 'com.android.application'
}

android {
    namespace 'org.portablecl.poclaisademo'
    compileSdk 33
    ndkVersion "26.0.10792818"

    defaultConfig {
        applicationId "org.portablecl.poclaisademo"
        minSdk 33
        targetSdk 33
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "arm64-v8a"
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DTRACY_ENABLE=OFF"
                cppFlags '-std=c++17 -O3 -mfpu=neon -ftree-vectorize'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
//   dependencies generated by creating a new project
    implementation "org.minidns:minidns-hla:0.3.2"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // needed to set everything that uses kotlin to use the same kotlin version
    // https://stackoverflow.com/questions/59790315/what-does-kotlin-bom-library-do
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))

}

// you can add compiler arguments to the java compiler like this
allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}